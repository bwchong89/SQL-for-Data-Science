Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

By: Bradley Chong

This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.



Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:


i. Attribute table = 10000
ii. Business table =10000
iii. Category table =10000
iv. Checkin table =10000
v. elite_years table = 10000
vi. friend table = 10000
vii. hours table =10000
viii. photo table = 10000
ix. review table = 10000
x. tip table = 10000
xi. user table = 10000
	


2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.


i. Business = (id) 10000
ii. Hours = (business_id) 2052
iii. Category = (business_id) 2643
iv. Attribute = (business_id) 1115
v. Review = (business_id) 8090 and (user_id) 9581
vi. Checkin = (business_id) 493
vii. Photo = (business_id) 6493 and (id) 10000
viii. Tip = (business_id) 3979 and (user_id) 537 
ix. User = (id) 10000
x. Friend = (user_id) 11
xi. Elite_years = (user_id) 2780

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	



3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: No
	
	
	SQL code used to arrive at answer:
	select *
	from user 
	where 
	id is null or 
	name is null or 
	review_count is null or
	yelping_since is null or 
	useful is null or 
	funny is null or
	cool is null or 
	fans is null or 
	average_stars is null or 
	compliment_hot is null or 
	compliment_more is null or
	compliment_profile is null or 
	compliment_cute is null or
	compliment_list is null or 
	compliment_note is null or
	compliment_plain is null or 
	compliment_cool is null or
	compliment_funny is null or 
	compliment_writer is null or
	compliment_photos is null
	

	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min:1		max:5		avg:3.7082
		
	
	ii. Table: Business, Column: Stars
	
		min:1		max:5		avg:3.6549
		
	
	iii. Table: Tip, Column: Likes
	
		min:0		max:2		avg:0.0144	
	
	iv. Table: Checkin, Column: Count
	
		min:1		max:53		avg: 1.9414
		
	
	v. Table: User, Column: Review_count
	
		min:0		max:2000		avg:24.2995
		


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:
	select city, sum(review_count) as totalReview
	from business
	group by city
	order by totalReview desc
	
	+-----------------+-------------+
	| city            | totalReview |
	+-----------------+-------------+
	| Las Vegas       |       82854 |
	| Phoenix         |       34503 |
	| Toronto         |       24113 |
	| Scottsdale      |       20614 |
	| Charlotte       |       12523 |
	| Henderson       |       10871 |
	| Tempe           |       10504 |
	| Pittsburgh      |        9798 |
	| Montréal        |        9448 |
	| Chandler        |        8112 |
	| Mesa            |        6875 |
	| Gilbert         |        6380 |
	| Cleveland       |        5593 |
	| Madison         |        5265 |
	| Glendale        |        4406 |
	| Mississauga     |        3814 |
	| Edinburgh       |        2792 |
	| Peoria          |        2624 |
	| North Las Vegas |        2438 |
	| Markham         |        2352 |
	| Champaign       |        2029 |
	| Stuttgart       |        1849 |
	| Surprise        |        1520 |
	| Lakewood        |        1465 |
	| Goodyear        |        1155 |
	+-----------------+-------------+
	(Output limit exceeded, 25 of 362 total rows shown)

	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:
select stars, sum(review_count) as total
from business
where city = 'Avon'
group by stars

Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
+-------+-------+
| stars | total |
+-------+-------+
|   1.5 |    10 |
|   2.5 |     6 |
|   3.5 |    88 |
|   4.0 |    21 |
|   4.5 |    31 |
|   5.0 |     3 |
+-------+-------+

ii. Beachwood

SQL code used to arrive at answer:
select stars, sum(review_count) as total
from business
where city = 'Beachwood'
group by stars


Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
+-------+-------+
| stars | total |
+-------+-------+
|   2.0 |     8 |
|   2.5 |     3 |
|   3.0 |    11 |
|   3.5 |     6 |
|   4.0 |    69 |
|   4.5 |    17 |
|   5.0 |    23 |
+-------+-------+		


7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:
	SELECT name, review_count
	FROM user
	ORDER BY review_count DESC	
	limit 3
		
	Copy and Paste the Result Below:
	+--------+--------------+
	| name   | review_count |
	+--------+--------------+
	| Gerald |         2000 |
	| Sara   |         1629 |
	| Yuri   |         1339 |
	+--------+--------------+	


8. Does posing more reviews correlate with more fans?  

	Please explain your findings and interpretation of the results:

No. By sorting the users by the review_count, you can see that the fan count isn't directly correlated. Users with similar review_count have vastly different fan counts.

	SELECT name, review_count, fans
	from user
	order by review_count desc

	+-----------+--------------+------+
	| name      | review_count | fans |
	+-----------+--------------+------+
	| Gerald    |         2000 |  253 |
	| Sara      |         1629 |   50 |
	| Yuri      |         1339 |   76 |
	| .Hon      |         1246 |  101 |
	| William   |         1215 |  126 |
	| Harald    |         1153 |  311 |
	| eric      |         1116 |   16 |
	| Roanna    |         1039 |  104 |
	| Mimi      |          968 |  497 |
	| Christine |          930 |  173 |
	| Ed        |          904 |   38 |
	| Nicole    |          864 |   43 |
	| Fran      |          862 |  124 |
	| Mark      |          861 |  115 |
	| Christina |          842 |   85 |
	| Dominic   |          836 |   37 |
	| Lissa     |          834 |  120 |
	| Lisa      |          813 |  159 |
	| Alison    |          775 |   61 |
	| Sui       |          754 |   78 |
	| Tim       |          702 |   35 |
	| L         |          696 |   10 |
	| Angela    |          694 |  101 |
	| Crissy    |          676 |   25 |
	| Lyn       |          675 |   45 |
	+-----------+--------------+------+
	(Output limit exceeded, 25 of 10000 total rows shown)

	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer: The word love appears 1780 times in the reviews while hate appears 232

	
	SQL code used to arrive at answer:

	select text
	from review
	where text like '%love%'

	select text
	from review
	where text like '%hate%'
	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
	select name, fans
	from user
	order by fans desc
	limit 10
	
	Copy and Paste the Result Below:
	+-----------+------+
	| name      | fans |
	+-----------+------+
	| Amy       |  503 |
	| Mimi      |  497 |
	| Harald    |  311 |
	| Gerald    |  253 |
	| Christine |  173 |
	| Lisa      |  159 |
	| Cat       |  133 |
	| William   |  126 |
	| Fran      |  124 |
	| Lissa     |  120 |
	+-----------+------+
	
		

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code. 

City: Markham Category: Restaurants
	
i. Do the two groups you chose to analyze have a different distribution of hours?
No. Judging by the first 25 entries for both high (3.5-5star) and low (1-2.5) rated restaurants are open from 10:00-21:00

ii. Do the two groups you chose to analyze have a different number of reviews?
Yes, the average high rating restaurant has 83 reviews while the low rating restaurants have 7.
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.
No, all the restaurants spread out all over Markham

SQL code used for analysis:

select distinct name, category, hours, postal_code,
--sum(review_count)/count(review_count) as avgNumReviews, --uncomment for question ii
case
  when stars between 1 and 2.5 then 'Low'
  when stars = 3 then 'Neutral'
  when stars between 3.5 and 5 then 'High'
end as StarRating

from business, category, hours
where category = 'Restaurants'
and category.business_id = business.id
and starRating = 'High' --uncomment for high, remember to comment out low
--and starRating = 'Low' --uncomment for low, remember to comment out high

order by review_count
		
		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1:
The restaurants that are no longer open have a lot more reviews (244) than those that are open (35).
         
ii. Difference 2:
Suprisingly, both of the ones that are open and the ones that are close both have about the same level of stars (~3.46). One would have thought that the ones that are closed would have a much lower rating.
         
         
SQL code used for analysis:

select is_open,(sum(review_count)/review_count) as avgNumeReviews, avg(stars)
from business, category
where category = 'Restaurants'
and category.business_id = business.id
group by is_open
	
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:
Where is the coolest city to eat in Ontario and how it compares to the other stats it presents. 
        
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:
To conduct this investigation, I will have to filter for the proper category, business ID, useful, funny, cool, and most importantly coolest place to eat. I'm hoping I can somewhere good to eat. Let's see what happens. 
                  
iii. Output of your finished dataset:
+-------------+------------------------------+--------------+--------+-------+------+-------+
| city        | name                         | review_count | useful | funny | cool | stars |
+-------------+------------------------------+--------------+--------+-------+------+-------+
| Markham     | Flaming Kitchen              |           25 |    106 |    69 |   90 |     3 |
| Toronto     | Mama Mia                     |            8 |    106 |    69 |   90 |     3 |
| Brampton    | Patiala House                |           10 |    106 |    69 |   90 |     3 |
| York        | What A Bagel                 |            8 |    106 |    69 |   90 |     3 |
| Toronto     | Cabin Fever                  |           26 |    106 |    69 |   90 |     3 |
| Toronto     | Royal Dumpling               |            4 |    106 |    69 |   90 |     3 |
| Toronto     | Big Smoke Burger             |           47 |    106 |    69 |   90 |     3 |
| Toronto     | Sushi Osaka                  |            8 |    106 |    69 |   90 |     3 |
| Mississauga | The Erin Mills Pump & Patio  |           27 |    106 |    69 |   90 |     3 |
| Toronto     | Pizzaiolo                    |           34 |    106 |    69 |   90 |     3 |
| Mississauga | Hermanos Mexican Grill       |           69 |    106 |    69 |   90 |     3 |
| Toronto     | 99 Cent Sushi                |            5 |    106 |    69 |   90 |     3 |
| Toronto     | The Kosher Gourmet           |            3 |    106 |    69 |   90 |     3 |
| Oakville    | Colossus Greek Taverna       |           55 |    106 |    69 |   90 |     3 |
| Toronto     | Naniwa-Taro                  |           75 |    106 |    69 |   90 |     3 |
| Mississauga | Masamune Japanese Restaurant |           61 |    106 |    69 |   90 |     3 |
| Mississauga | P & J Hamburgers Inn         |            3 |    106 |    69 |   90 |     3 |
| Toronto     | Edulis                       |           89 |    106 |    69 |   90 |     3 |
| Markham     | Flaming Kitchen              |           25 |     73 |    57 |   70 |     4 |
| Toronto     | Mama Mia                     |            8 |     73 |    57 |   70 |     4 |
| Brampton    | Patiala House                |           10 |     73 |    57 |   70 |     4 |
| York        | What A Bagel                 |            8 |     73 |    57 |   70 |     4 |
| Toronto     | Cabin Fever                  |           26 |     73 |    57 |   70 |     4 |
| Toronto     | Royal Dumpling               |            4 |     73 |    57 |   70 |     4 |
| Toronto     | Big Smoke Burger             |           47 |     73 |    57 |   70 |     4 |
+-------------+------------------------------+--------------+--------+-------+------+-------+
(Output limit exceeded, 25 of 12528 total rows shown)
         
iv. Provide the SQL code you used to create your final dataset:

select distinct city, name, review_count
, useful
, funny
, cool
, review.stars

from business, category, review
where category = 'Restaurants'
and business.id = category.business_id
and state = 'ON'
order by cool desc
